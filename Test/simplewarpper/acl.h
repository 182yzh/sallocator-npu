aclError aclInit(const char* configPath)
aclError aclFinalize()
aclError aclrtGetVersion(int32_t* majorVersion, int32_t* minorVersion, int32_t* patchVersion)
const char* aclGetRecentErrMsg()
aclError aclrtSetExceptionInfoCallback(aclrtExceptionInfoCallback callback)
uint32_t aclrtGetTaskIdFromExceptionInfo(const aclrtExceptionInfo* info)
uint32_t aclrtGetStreamIdFromExceptionInfo(const aclrtExceptionInfo* info)
uint32_t aclrtGetThreadIdFromExceptionInfo(const aclrtExceptionInfo* info)
uint32_t aclrtGetDeviceIdFromExceptionInfo(const aclrtExceptionInfo* info)
uint32_t aclrtGetErrorCodeFromExceptionInfo(const aclrtExceptionInfo* info)
aclError aclrtSubscribeReport(uint64_t threadId, aclrtStream stream)
aclError aclrtLaunchCallback(aclrtCallback fn, void* userData, aclrtCallbackBlockType blockType, aclrtStream stream)
aclError aclrtProcessReport(int32_t timeout)
aclError aclrtUnSubscribeReport(uint64_t threadId, aclrtStream stream)
aclError aclrtCreateContext(aclrtContext* context, int32_t deviceId)
aclError aclrtDestroyContext(aclrtContext context)
aclError aclrtSetCurrentContext(aclrtContext context)
aclError aclrtGetCurrentContext(aclrtContext* context)
aclError aclrtCtxGetSysParamOpt(aclSysParamOpt opt, int64_t* value)
aclError aclrtCtxSetSysParamOpt(aclSysParamOpt opt, int64_t value)
aclError aclrtSetDevice(int32_t deviceId)
aclError aclrtResetDevice(int32_t deviceId)
aclError aclrtGetDevice(int32_t* deviceId)
aclError aclrtSetStreamFailureMode(aclrtStream stream, uint64_t mode)
aclError aclrtGetRunMode(aclrtRunMode* runMode)
aclError aclrtSynchronizeDevice(void)
aclError aclrtSetTsDevice(aclrtTsId tsId)
aclError aclrtGetDeviceUtilizationRate(int32_t deviceId, aclrtUtilizationInfo* utilizationInfo)
aclError aclrtGetDeviceCount(uint32_t* count)
aclError aclrtCreateEvent(aclrtEvent* event)
aclError aclrtCreateEventWithFlag(aclrtEvent* event, uint32_t flag)
aclError aclrtCreateEventExWithFlag(aclrtEvent* event, uint32_t flag)
aclError aclrtDestroyEvent(aclrtEvent event)
aclError aclrtRecordEvent(aclrtEvent event, aclrtStream stream)
aclError aclrtResetEvent(aclrtEvent event, aclrtStream stream)
aclError aclrtQueryEvent(aclrtEvent event, aclrtEventStatus* status)
aclError aclrtQueryEventStatus(aclrtEvent event, aclrtEventRecordedStatus* status)
aclError aclrtQueryEventWaitStatus(aclrtEvent event, aclrtEventWaitStatus* status)
aclError aclrtSynchronizeEvent(aclrtEvent event)
aclError aclrtSynchronizeEventWithTimeout(aclrtEvent event, int32_t timeout)
aclError aclrtEventElapsedTime(float* ms, aclrtEvent startEvent, aclrtEvent endEvent)
aclError aclrtMalloc(void** devPtr, size_t size, aclrtMemMallocPolicy policy)
aclError aclrtMallocAlign32(void** devPtr, size_t size, aclrtMemMallocPolicy policy)
aclError aclrtMallocCached(void** devPtr, size_t size, aclrtMemMallocPolicy policy)
aclError aclrtMemFlush(void* devPtr, size_t size)
aclError aclrtMemInvalidate(void* devPtr, size_t size)
aclError aclrtFree(void* devPtr)
aclError aclrtMallocHost(void** hostPtr, size_t size)
aclError aclrtFreeHost(void* hostPtr)
aclError aclrtMemcpy(void* dst, size_t destMax, const void* src, size_t count, aclrtMemcpyKind kind)
aclError aclrtMemset(void* devPtr, size_t maxCount, int32_t value, size_t count)
aclError aclrtMemcpyAsync(void* dst, size_t destMax, const void* src, size_t count, aclrtMemcpyKind kind, aclrtStream stream)
aclError aclrtMemcpy2d(void* dst, size_t dpitch, const void* src, size_t spitch, size_t width, size_t height, aclrtMemcpyKind kind)
aclError aclrtMemcpy2dAsync(void* dst, size_t dpitch, const void* src, size_t spitch, size_t width, size_t height, aclrtMemcpyKind kind, aclrtStream stream)
aclError aclrtMemsetAsync(void* devPtr, size_t maxCount, int32_t value, size_t count, aclrtStream stream)
aclError aclrtReserveMemAddress(void** virPtr, size_t size, size_t alignment, void* expectPtr, uint64_t flags)
aclError aclrtReleaseMemAddress(void* virPtr)
aclError aclrtMallocPhysical(aclrtDrvMemHandle* handle, size_t size, const aclrtPhysicalMemProp* prop, uint64_t flags)
aclError aclrtFreePhysical(aclrtDrvMemHandle handle)
aclError aclrtMapMem(void* virPtr, size_t size, size_t offset, aclrtDrvMemHandle handle, uint64_t flags)
aclError aclrtUnmapMem(void* virPtr)
aclrtStreamConfigHandle* aclrtCreateStreamConfigHandle(void)
aclError aclrtDestroyStreamConfigHandle(aclrtStreamConfigHandle* handle)
aclError aclrtSetStreamConfigOpt(aclrtStreamConfigHandle* handle, aclrtStreamConfigAttr attr, const void* attrValue, size_t valueSize)
aclError aclrtCreateStream(aclrtStream* stream)
aclError aclrtCreateStreamV2(aclrtStream* stream, const aclrtStreamConfigHandle* handle)
aclError aclrtCreateStreamWithConfig(aclrtStream* stream, uint32_t priority, uint32_t flag)
aclError aclrtDestroyStream(aclrtStream stream)
aclError aclrtDestroyStreamForce(aclrtStream stream)
aclError aclrtSynchronizeStream(aclrtStream stream)
aclError aclrtSynchronizeStreamWithTimeout(aclrtStream stream, int32_t timeout)
aclError aclrtStreamQuery(aclrtStream stream, aclrtStreamStatus* status)
aclError aclrtStreamWaitEvent(aclrtStream stream, aclrtEvent event)
aclError aclrtSetGroup(int32_t groupId)
aclError aclrtGetGroupCount(uint32_t* count)
aclrtGroupInfo* aclrtCreateGroupInfo()
aclError aclrtDestroyGroupInfo(aclrtGroupInfo* groupInfo)
aclError aclrtGetAllGroupInfo(aclrtGroupInfo* groupInfo)
aclError aclrtGetGroupInfoDetail(const aclrtGroupInfo* groupInfo, int32_t groupIndex, aclrtGroupAttr attr, void* attrValue, size_t valueLen, size_t* paramRetSize)
aclError aclrtDeviceCanAccessPeer(int32_t* canAccessPeer, int32_t deviceId, int32_t peerDeviceId)
aclError aclrtDeviceEnablePeerAccess(int32_t peerDeviceId, uint32_t flags)
aclError aclrtDeviceDisablePeerAccess(int32_t peerDeviceId)
aclError aclrtGetMemInfo(aclrtMemAttr attr, size_t* free, size_t* total)
aclError aclrtSetOpWaitTimeout(uint32_t timeout)
aclError aclrtSetOpExecuteTimeOut(uint32_t timeout)
aclError aclrtSetStreamOverflowSwitch(aclrtStream stream, uint32_t flag)
aclError aclrtGetStreamOverflowSwitch(aclrtStream stream, uint32_t* flag)
aclError aclrtSetDeviceSatMode(aclrtFloatOverflowMode mode)
aclError aclrtGetDeviceSatMode(aclrtFloatOverflowMode* mode)
aclError aclrtGetOverflowStatus(void* outputAddr, size_t outputSize, aclrtStream stream)
aclError aclrtResetOverflowStatus(aclrtStream stream)
aclError aclrtSubscribeHostFunc(uint64_t hostFuncThreadId, aclrtStream exeStream)
aclError aclrtProcessHostFunc(int32_t timeout)
aclError aclrtUnSubscribeHostFunc(uint64_t hostFuncThreadId, aclrtStream exeStream)
aclError aclrtQueryDeviceStatus(int32_t deviceId, aclrtDeviceStatus* deviceStatus)
aclrtBinary aclrtCreateBinary(const void* data, size_t dataLen)
aclError aclrtDestroyBinary(aclrtBinary binary)
aclError aclrtBinaryLoad(const aclrtBinary binary, aclrtBinHandle* binHandle)
aclError aclrtBinaryUnLoad(aclrtBinHandle binHandle)
aclError aclrtBinaryGetFunction(const aclrtBinHandle binHandle, const char* kernelName, aclrtFuncHandle* funcHandle)
aclError aclrtLaunchKernel(aclrtFuncHandle funcHandle, uint32_t blockDim, const void* argsData, size_t argsSize, aclrtStream stream)
aclError aclrtMemExportToShareableHandle(aclrtDrvMemHandle handle, aclrtMemHandleType handleType, uint64_t flags, uint64_t* shareableHandle)
aclError aclrtMemImportFromShareableHandle(uint64_t shareableHandle, int32_t deviceId, aclrtDrvMemHandle* handle)
aclError aclrtMemSetPidToShareableHandle(uint64_t shareableHandle, int32_t* pid, size_t pidNum)
aclError aclrtMemGetAllocationGranularity(aclrtPhysicalMemProp* prop, aclrtMemGranularityOptions option, size_t* granularity)
aclError aclrtDeviceGetBareTgid(int32_t* pid)
aclError aclopSetModelDir(const char* modelDir)
aclError aclopLoad(const void* model, size_t modelSize)
aclopAttr* aclopCreateAttr()
void aclopDestroyAttr(const aclopAttr* attr)
aclError aclopSetAttrBool(aclopAttr* attr, const char* attrName, uint8_t attrValue)
aclError aclopSetAttrInt(aclopAttr* attr, const char* attrName, int64_t attrValue)
aclError aclopSetAttrFloat(aclopAttr* attr, const char* attrName, float attrValue)
aclError aclopSetAttrString(aclopAttr* attr, const char* attrName, const char* attrValue)
aclError aclopSetAttrDataType(aclopAttr* attr, const char* attrName, aclDataType attrValue)
aclError aclopSetAttrListDataType(aclopAttr* attr, const char* attrName, int numValues, const aclDataType values[])
aclError aclopSetAttrListBool(aclopAttr* attr, const char* attrName, int numValues, const uint8_t* values)
aclError aclopSetAttrListInt(aclopAttr* attr, const char* attrName, int numValues, const int64_t* values)
aclError aclopSetAttrListFloat(aclopAttr* attr, const char* attrName, int numValues, const float* values)
aclError aclopSetAttrListString(aclopAttr* attr, const char* attrName, int numValues, const char** values)
aclError aclopSetAttrListListInt(aclopAttr* attr, const char* attrName, int numLists, const int* numValues, const int64_t* const values[])
aclError aclopExecute(const char* opType, int numInputs, const aclTensorDesc* const inputDesc[], const aclDataBuffer* const inputs[], int numOutputs, const aclTensorDesc* const outputDesc[], aclDataBuffer* const outputs[], const aclopAttr* attr, aclrtStream stream)
aclError aclopExecuteV2(const char* opType, int numInputs, aclTensorDesc* inputDesc[], aclDataBuffer* inputs[], int numOutputs, aclTensorDesc* outputDesc[], aclDataBuffer* outputs[], aclopAttr* attr, aclrtStream stream)
aclError aclopCreateHandle(const char* opType, int numInputs, const aclTensorDesc* const inputDesc[], int numOutputs, const aclTensorDesc* const outputDesc[], const aclopAttr* opAttr, aclopHandle** handle)
void aclopDestroyHandle(aclopHandle* handle)
aclError aclopExecWithHandle(aclopHandle* handle, int numInputs, const aclDataBuffer* const inputs[], int numOutputs, aclDataBuffer* const outputs[], aclrtStream stream)
aclError aclopCast(const aclTensorDesc* srcDesc, const aclDataBuffer* srcBuffer, const aclTensorDesc* dstDesc, aclDataBuffer* dstBuffer, uint8_t truncate, aclrtStream stream)
aclError aclopCreateHandleForCast(aclTensorDesc* srcDesc, aclTensorDesc* dstDesc, uint8_t truncate, aclopHandle** handle)
aclError aclopCreateKernel(const char* opType, const char* kernelId, const char* kernelName, void* binData, int binSize, aclopEngineType enginetype, aclDataDeallocator deallocator)
aclError aclopRegisterCompileFunc(const char* opType, aclopCompileFunc func)
aclError aclopUnregisterCompileFunc(const char* opType)
aclError aclopSetKernelArgs(aclopKernelDesc* kernelDesc, const char* kernelId, uint32_t blockDim, const void* args, uint32_t argSize)
aclError aclopSetKernelWorkspaceSizes(aclopKernelDesc* kernelDesc, int numWorkspaces, size_t* workspaceSizes)
aclError aclopUpdateParams(const char* opType, int numInputs, const aclTensorDesc* const inputDesc[], int numOutputs, const aclTensorDesc* const outputDesc[], const aclopAttr* attr)
aclError aclopInferShape(const char* opType, int numInputs, aclTensorDesc* inputDesc[], aclDataBuffer* inputs[], int numOutputs, aclTensorDesc* outputDesc[], aclopAttr* attr)
aclError aclopStartDumpArgs(uint32_t dumpType, const char* path)
aclError aclopStopDumpArgs(uint32_t dumpType)
float aclFloat16ToFloat(aclFloat16 value)
aclFloat16 aclFloatToFloat16(float value)
aclDataBuffer* aclCreateDataBuffer(void* data, size_t size)
aclError aclDestroyDataBuffer(const aclDataBuffer* dataBuffer)
aclError aclUpdateDataBuffer(aclDataBuffer* dataBuffer, void* data, size_t size)
void* aclGetDataBufferAddr(const aclDataBuffer* dataBuffer)
uint32_t aclGetDataBufferSize(const aclDataBuffer* dataBuffer)
size_t aclGetDataBufferSizeV2(const aclDataBuffer* dataBuffer)
size_t aclDataTypeSize(aclDataType dataType)
aclTensorDesc* aclCreateTensorDesc(aclDataType dataType, int numDims, const int64_t* dims, aclFormat format)
void aclDestroyTensorDesc(const aclTensorDesc* desc)
aclError aclSetTensorShapeRange(aclTensorDesc* desc, size_t dimsCount, int64_t dimsRange[][ACL_TENSOR_SHAPE_RANGE_NUM])
aclError aclSetTensorValueRange(aclTensorDesc* desc, size_t valueCount, int64_t valueRange[][ACL_TENSOR_VALUE_RANGE_NUM])
aclDataType aclGetTensorDescType(const aclTensorDesc* desc)
aclFormat aclGetTensorDescFormat(const aclTensorDesc* desc)
size_t aclGetTensorDescSize(const aclTensorDesc* desc)
size_t aclGetTensorDescElementCount(const aclTensorDesc* desc)
size_t aclGetTensorDescNumDims(const aclTensorDesc* desc)
int64_t aclGetTensorDescDim(const aclTensorDesc* desc, size_t index)
aclError aclGetTensorDescDimV2(const aclTensorDesc* desc, size_t index, int64_t* dimSize)
aclError aclGetTensorDescDimRange(const aclTensorDesc* desc, size_t index, size_t dimRangeNum, int64_t* dimRange)
void aclSetTensorDescName(aclTensorDesc* desc, const char* name)
const char* aclGetTensorDescName(aclTensorDesc* desc)
aclError aclTransTensorDescFormat(const aclTensorDesc* srcDesc, aclFormat dstFormat, aclTensorDesc** dstDesc)
aclError aclSetTensorStorageFormat(aclTensorDesc* desc, aclFormat format)
aclError aclSetTensorStorageShape(aclTensorDesc* desc, int numDims, const int64_t* dims)
aclError aclSetTensorFormat(aclTensorDesc* desc, aclFormat format)
aclError aclSetTensorShape(aclTensorDesc* desc, int numDims, const int64_t* dims)
aclError aclSetTensorOriginFormat(aclTensorDesc* desc, aclFormat format)
aclError aclSetTensorOriginShape(aclTensorDesc* desc, int numDims, const int64_t* dims)
aclTensorDesc* aclGetTensorDescByIndex(aclTensorDesc* desc, size_t index)
void* aclGetTensorDescAddress(const aclTensorDesc* desc)
aclError aclSetTensorDynamicInput(aclTensorDesc* desc, const char* dynamicInputName)
aclError aclSetTensorConst(aclTensorDesc* desc, void* dataBuffer, size_t length)
aclError aclSetTensorPlaceMent(aclTensorDesc* desc, aclMemType memType)
void aclAppLog(aclLogLevel logLevel, const char* func, const char* file, uint32_t line, const char* fmt, ...)
const char* aclrtGetSocName()
aclError aclGetCannAttributeList(const aclCannAttr** cannAttrList, size_t* num)
aclError aclGetCannAttribute(aclCannAttr cannAttr, int32_t* value)
aclError aclGetDeviceCapability(uint32_t deviceId, aclDeviceInfo deviceInfo, int64_t* value)
aclmdlDesc* aclmdlCreateDesc()
aclError aclmdlDestroyDesc(aclmdlDesc* modelDesc)
aclError aclmdlGetDesc(aclmdlDesc* modelDesc, uint32_t modelId)
aclError aclmdlGetDescFromFile(aclmdlDesc* modelDesc, const char* modelPath)
aclError aclmdlGetDescFromMem(aclmdlDesc* modelDesc, const void* model, size_t modelSize)
size_t aclmdlGetNumInputs(aclmdlDesc* modelDesc)
size_t aclmdlGetNumOutputs(aclmdlDesc* modelDesc)
size_t aclmdlGetInputSizeByIndex(aclmdlDesc* modelDesc, size_t index)
size_t aclmdlGetOutputSizeByIndex(aclmdlDesc* modelDesc, size_t index)
aclmdlExecConfigHandle* aclmdlCreateExecConfigHandle()
aclError aclmdlDestroyExecConfigHandle(const aclmdlExecConfigHandle* handle)
aclmdlDataset* aclmdlCreateDataset()
aclError aclmdlDestroyDataset(const aclmdlDataset* dataset)
aclError aclmdlAddDatasetBuffer(aclmdlDataset* dataset, aclDataBuffer* dataBuffer)
aclError aclmdlSetDatasetTensorDesc(aclmdlDataset* dataset, aclTensorDesc* tensorDesc, size_t index)
aclTensorDesc* aclmdlGetDatasetTensorDesc(const aclmdlDataset* dataset, size_t index)
size_t aclmdlGetDatasetNumBuffers(const aclmdlDataset* dataset)
aclDataBuffer* aclmdlGetDatasetBuffer(const aclmdlDataset* dataset, size_t index)
aclError aclmdlLoadFromFile(const char* modelPath, uint32_t* modelId)
aclError aclmdlLoadFromMem(const void* model, size_t modelSize, uint32_t* modelId)
aclError aclmdlLoadFromFileWithMem(const char* modelPath, uint32_t* modelId, void* workPtr, size_t workSize, void* weightPtr, size_t weightSize)
aclError aclmdlLoadFromMemWithMem(const void* model, size_t modelSize, uint32_t* modelId, void* workPtr, size_t workSize, void* weightPtr, size_t weightSize)
aclError aclmdlLoadFromFileWithQ(const char* modelPath, uint32_t* modelId, const uint32_t* inputQ, size_t inputQNum, const uint32_t* outputQ, size_t outputQNum)
aclError aclmdlLoadFromMemWithQ(const void* model, size_t modelSize, uint32_t* modelId, const uint32_t* inputQ, size_t inputQNum, const uint32_t* outputQ, size_t outputQNum)
aclError aclmdlExecute(uint32_t modelId, const aclmdlDataset* input, aclmdlDataset* output)
aclError aclmdlExecuteV2(uint32_t modelId, const aclmdlDataset* input, aclmdlDataset* output, aclrtStream stream, const aclmdlExecConfigHandle* handle)
aclError aclmdlExecuteAsyncV2(uint32_t modelId, const aclmdlDataset* input, aclmdlDataset* output, aclrtStream stream, const aclmdlExecConfigHandle* handle)
aclError aclmdlExecuteAsync(uint32_t modelId, const aclmdlDataset* input, aclmdlDataset* output, aclrtStream stream)
aclError aclmdlUnload(uint32_t modelId)
aclError aclmdlQuerySize(const char* fileName, size_t* workSize, size_t* weightSize)
aclError aclmdlQueryExeOMDesc(const char* fileName, aclmdlExeOMDesc* mdlPartitionSize)
aclError aclmdlQuerySizeFromMem(const void* model, size_t modelSize, size_t* workSize, size_t* weightSize)
aclError aclmdlSetDynamicBatchSize(uint32_t modelId, aclmdlDataset* dataset, size_t index, uint64_t batchSize)
aclError aclmdlSetDynamicHWSize(uint32_t modelId, aclmdlDataset* dataset, size_t index, uint64_t height, uint64_t width)
aclError aclmdlSetInputDynamicDims(uint32_t modelId, aclmdlDataset* dataset, size_t index, const aclmdlIODims* dims)
aclError aclmdlGetInputDims(const aclmdlDesc* modelDesc, size_t index, aclmdlIODims* dims)
aclError aclmdlGetInputDimsV2(const aclmdlDesc* modelDesc, size_t index, aclmdlIODims* dims)
aclError aclmdlGetOutputDims(const aclmdlDesc* modelDesc, size_t index, aclmdlIODims* dims)
aclError aclmdlGetCurOutputDims(const aclmdlDesc* modelDesc, size_t index, aclmdlIODims* dims)
const char* aclmdlGetOpAttr(aclmdlDesc* modelDesc, const char* opName, const char* attr)
const char* aclmdlGetInputNameByIndex(const aclmdlDesc* modelDesc, size_t index)
const char* aclmdlGetOutputNameByIndex(const aclmdlDesc* modelDesc, size_t index)
aclFormat aclmdlGetInputFormat(const aclmdlDesc* modelDesc, size_t index)
aclFormat aclmdlGetOutputFormat(const aclmdlDesc* modelDesc, size_t index)
aclDataType aclmdlGetInputDataType(const aclmdlDesc* modelDesc, size_t index)
aclDataType aclmdlGetOutputDataType(const aclmdlDesc* modelDesc, size_t index)
aclError aclmdlGetInputIndexByName(const aclmdlDesc* modelDesc, const char* name, size_t* index)
aclError aclmdlGetOutputIndexByName(const aclmdlDesc* modelDesc, const char* name, size_t* index)
aclError aclmdlGetDynamicBatch(const aclmdlDesc* modelDesc, aclmdlBatch* batch)
aclError aclmdlGetDynamicHW(const aclmdlDesc* modelDesc, size_t index, aclmdlHW* hw)
aclError aclmdlGetInputDynamicGearCount(const aclmdlDesc* modelDesc, size_t index, size_t* gearCount)
aclError aclmdlGetInputDynamicDims(const aclmdlDesc* modelDesc, size_t index, aclmdlIODims* dims, size_t gearCount)
aclmdlAIPP* aclmdlCreateAIPP(uint64_t batchSize)
aclError aclmdlDestroyAIPP(const aclmdlAIPP* aippParmsSet)
aclError aclmdlGetAippDataSize(uint64_t batchSize, size_t* size)
aclError aclmdlSetAIPPInputFormat(aclmdlAIPP* aippParmsSet, aclAippInputFormat inputFormat)
aclError aclmdlSetAIPPCscParams(aclmdlAIPP* aippParmsSet, int8_t cscSwitch, int16_t cscMatrixR0C0, int16_t cscMatrixR0C1, int16_t cscMatrixR0C2, int16_t cscMatrixR1C0, int16_t cscMatrixR1C1, int16_t cscMatrixR1C2, int16_t cscMatrixR2C0, int16_t cscMatrixR2C1, int16_t cscMatrixR2C2, uint8_t cscOutputBiasR0, uint8_t cscOutputBiasR1, uint8_t cscOutputBiasR2, uint8_t cscInputBiasR0, uint8_t cscInputBiasR1, uint8_t cscInputBiasR2)
aclError aclmdlSetAIPPRbuvSwapSwitch(aclmdlAIPP* aippParmsSet, int8_t rbuvSwapSwitch)
aclError aclmdlSetAIPPAxSwapSwitch(aclmdlAIPP* aippParmsSet, int8_t axSwapSwitch)
aclError aclmdlSetAIPPSrcImageSize(aclmdlAIPP* aippParmsSet, int32_t srcImageSizeW, int32_t srcImageSizeH)
aclError aclmdlSetAIPPScfParams(aclmdlAIPP* aippParmsSet, int8_t scfSwitch, int32_t scfInputSizeW, int32_t scfInputSizeH, int32_t scfOutputSizeW, int32_t scfOutputSizeH, uint64_t batchIndex)
aclError aclmdlSetAIPPCropParams(aclmdlAIPP* aippParmsSet, int8_t cropSwitch, int32_t cropStartPosW, int32_t cropStartPosH, int32_t cropSizeW, int32_t cropSizeH, uint64_t batchIndex)
aclError aclmdlSetAIPPPaddingParams(aclmdlAIPP* aippParmsSet, int8_t paddingSwitch, int32_t paddingSizeTop, int32_t paddingSizeBottom, int32_t paddingSizeLeft, int32_t paddingSizeRight, uint64_t batchIndex)
aclError aclmdlSetAIPPDtcPixelMean(aclmdlAIPP* aippParmsSet, int16_t dtcPixelMeanChn0, int16_t dtcPixelMeanChn1, int16_t dtcPixelMeanChn2, int16_t dtcPixelMeanChn3, uint64_t batchIndex)
aclError aclmdlSetAIPPDtcPixelMin(aclmdlAIPP* aippParmsSet, float dtcPixelMinChn0, float dtcPixelMinChn1, float dtcPixelMinChn2, float dtcPixelMinChn3, uint64_t batchIndex)
aclError aclmdlSetAIPPPixelVarReci(aclmdlAIPP* aippParmsSet, float dtcPixelVarReciChn0, float dtcPixelVarReciChn1, float dtcPixelVarReciChn2, float dtcPixelVarReciChn3, uint64_t batchIndex)
aclError aclmdlSetInputAIPP(uint32_t modelId, aclmdlDataset* dataset, size_t index, const aclmdlAIPP* aippParmsSet)
aclError aclmdlSetAIPPByInputIndex(uint32_t modelId, aclmdlDataset* dataset, size_t index, const aclmdlAIPP* aippParmsSet)
aclError aclmdlGetAippType(uint32_t modelId, size_t index, aclmdlInputAippType* type, size_t* dynamicAttachedDataIndex)
aclError aclmdlGetFirstAippInfo(uint32_t modelId, size_t index, aclAippInfo* aippInfo)
aclError aclmdlCreateAndGetOpDesc(uint32_t deviceId, uint32_t streamId, uint32_t taskId, char* opName, size_t opNameLen, aclTensorDesc** inputDesc, size_t* numInputs, aclTensorDesc** outputDesc, size_t* numOutputs)
aclError aclmdlInitDump()
aclError aclmdlSetDump(const char* dumpCfgPath)
aclError aclmdlFinalizeDump()
aclError aclmdlLoadWithConfig(const aclmdlConfigHandle* handle, uint32_t* modelId)
aclmdlConfigHandle* aclmdlCreateConfigHandle()
aclError aclmdlDestroyConfigHandle(aclmdlConfigHandle* handle)
aclError aclmdlSetConfigOpt(aclmdlConfigHandle* handle, aclmdlConfigAttr attr, const void* attrValue, size_t valueSize)
aclError aclmdlSetExecConfigOpt(aclmdlExecConfigHandle* handle, aclmdlExecConfigAttr attr, const void* attrValue, size_t valueSize)
const char* aclmdlGetTensorRealName(const aclmdlDesc* modelDesc, const char* name)
aclError aclprofInit(const char* profilerResultPath, size_t length)
aclError aclprofSetConfig(aclprofConfigType configType, const char* config, size_t configLength)
aclError aclprofFinalize()
aclError aclprofStart(const aclprofConfig* profilerConfig)
aclprofConfig* aclprofCreateConfig(uint32_t* deviceIdList, uint32_t deviceNums, aclprofAicoreMetrics aicoreMetrics, aclprofAicoreEvents* aicoreEvents, uint64_t dataTypeConfig)
aclError aclprofDestroyConfig(const aclprofConfig* profilerConfig)
aclError aclprofStop(const aclprofConfig* profilerConfig)
aclError aclprofModelSubscribe(uint32_t modelId, const aclprofSubscribeConfig* profSubscribeConfig)
aclError aclprofModelUnSubscribe(uint32_t modelId)
aclprofSubscribeConfig* aclprofCreateSubscribeConfig(int8_t timeInfoSwitch, aclprofAicoreMetrics aicoreMetrics, void* fd)
aclError aclprofDestroySubscribeConfig(const aclprofSubscribeConfig* profSubscribeConfig)
aclError aclprofGetOpDescSize(size_t* opDescSize)
aclError aclprofGetOpNum(const void* opInfo, size_t opInfoLen, uint32_t* opNumber)
aclError aclprofGetOpTypeLen(const void* opInfo, size_t opInfoLen, uint32_t index, size_t* opTypeLen)
aclError aclprofGetOpType(const void* opInfo, size_t opInfoLen, uint32_t index, char* opType, size_t opTypeLen)
aclError aclprofGetOpNameLen(const void* opInfo, size_t opInfoLen, uint32_t index, size_t* opNameLen)
aclError aclprofGetOpName(const void* opInfo, size_t opInfoLen, uint32_t index, char* opName, size_t opNameLen)
uint64_t aclprofGetOpStart(const void* opInfo, size_t opInfoLen, uint32_t index)
uint64_t aclprofGetOpEnd(const void* opInfo, size_t opInfoLen, uint32_t index)
uint64_t aclprofGetOpDuration(const void* opInfo, size_t opInfoLen, uint32_t index)
size_t aclprofGetModelId(const void* opInfo, size_t opInfoLen, uint32_t index)
aclError aclprofGetStepTimestamp(aclprofStepInfo* stepInfo, aclprofStepTag tag, aclrtStream stream)
aclprofStepInfo* aclprofCreateStepInfo(void)
void aclprofDestroyStepInfo(aclprofStepInfo* stepinfo)
void* aclprofCreateStamp(void)
void aclprofDestroyStamp(void* stamp)
aclError aclprofPush(void* stamp)
aclError aclprofPop()
aclError aclprofRangeStart(void* stamp, uint32_t* rangeId)
aclError aclprofRangeStop(uint32_t rangeId)
aclError aclprofSetStampTraceMessage(void* stamp, const char* msg, uint32_t msgLen)
aclError aclprofMark(void* stamp)
aclError aclprofMarkEx(const char* msg, size_t msgLen, aclrtStream stream)
aclrtAllocatorDesc aclrtAllocatorCreateDesc()
aclError aclrtAllocatorDestroyDesc(aclrtAllocatorDesc allocatorDesc)
aclError aclrtAllocatorSetObjToDesc(aclrtAllocatorDesc allocatorDesc, aclrtAllocator allocator)
aclError aclrtAllocatorSetAllocFuncToDesc(aclrtAllocatorDesc allocatorDesc,  aclrtAllocatorAllocFunc func)
aclError aclrtAllocatorSetFreeFuncToDesc(aclrtAllocatorDesc allocatorDesc,  aclrtAllocatorFreeFunc func)
aclError aclrtAllocatorSetAllocAdviseFuncToDesc(aclrtAllocatorDesc allocatorDesc,   aclrtAllocatorAllocAdviseFunc func)
aclError aclrtAllocatorSetGetAddrFromBlockFuncToDesc(aclrtAllocatorDesc allocatorDesc,   aclrtAllocatorGetAddrFromBlockFunc func)
aclError aclrtAllocatorRegister(aclrtStream stream, aclrtAllocatorDesc allocatorDesc)
aclError aclrtAllocatorUnregister(aclrtStream stream)
aclError aclopCompile(const char* opType,  int numInputs,  const aclTensorDesc* const inputDesc[],  int numOutputs,  const aclTensorDesc* const outputDesc[],  const aclopAttr* attr,  aclopEngineType engineType,  aclopCompileType compileFlag,  const char* opPath)
aclError aclopCompileAndExecute(const char* opType,  int numInputs, const aclTensorDesc* const inputDesc[], const aclDataBuffer* const inputs[],  int numOutputs, const aclTensorDesc* const outputDesc[], aclDataBuffer* const outputs[],  const aclopAttr* attr, aclopEngineType engineType, aclopCompileType compileFlag,  const char* opPath, aclrtStream stream)
aclError aclopCompileAndExecuteV2(const char* opType,  int numInputs, aclTensorDesc* inputDesc[], aclDataBuffer* inputs[],  int numOutputs, aclTensorDesc* outputDesc[], aclDataBuffer* outputs[],  aclopAttr* attr, aclopEngineType engineType, aclopCompileType compileFlag,  const char* opPath, aclrtStream stream)
aclError aclSetCompileopt(aclCompileOpt opt, const char* value)
size_t aclGetCompileoptSize(aclCompileOpt opt)
aclError aclGetCompileopt(aclCompileOpt opt, char* value, size_t length)
aclError aclopSetCompileFlag(aclOpCompileFlag flag)
aclError aclGenGraphAndDumpForOp(const char* opType,  int numInputs, const aclTensorDesc* const inputDesc[], const aclDataBuffer* const inputs[],  int numOutputs, const aclTensorDesc* const outputDesc[], aclDataBuffer* const outputs[],  const aclopAttr* attr, aclopEngineType engineType,  const char* graphDumpPath, const aclGraphDumpOption* graphDumpOpt)
aclGraphDumpOption* aclCreateGraphDumpOpt()
aclError aclDestroyGraphDumpOpt(const aclGraphDumpOption* graphDumpOpt)
