aclError aclprofInit(const char* profilerResultPath, size_t length);
aclError aclprofSetConfig(aclprofConfigType configType, const char* config, size_t configLength);
aclError aclprofFinalize();
aclError aclprofStart(const aclprofConfig* profilerConfig);
aclprofConfig* aclprofCreateConfig(uint32_t* deviceIdList, uint32_t deviceNums, aclprofAicoreMetrics aicoreMetrics, aclprofAicoreEvents* aicoreEvents, uint64_t dataTypeConfig);
aclError aclprofDestroyConfig(const aclprofConfig* profilerConfig);
aclError aclprofStop(const aclprofConfig* profilerConfig);
aclError aclprofModelSubscribe(uint32_t modelId, const aclprofSubscribeConfig* profSubscribeConfig);
aclError aclprofModelUnSubscribe(uint32_t modelId);
aclprofSubscribeConfig* aclprofCreateSubscribeConfig(int8_t timeInfoSwitch, aclprofAicoreMetrics aicoreMetrics, void* fd);
aclError aclprofDestroySubscribeConfig(const aclprofSubscribeConfig* profSubscribeConfig);
aclError aclprofGetOpDescSize(size_t* opDescSize);
aclError aclprofGetOpNum(const void* opInfo, size_t opInfoLen, uint32_t* opNumber);
aclError aclprofGetOpTypeLen(const void* opInfo, size_t opInfoLen, uint32_t index, size_t* opTypeLen);
aclError aclprofGetOpType(const void* opInfo, size_t opInfoLen, uint32_t index, char* opType, size_t opTypeLen);
aclError aclprofGetOpNameLen(const void* opInfo, size_t opInfoLen, uint32_t index, size_t* opNameLen);
aclError aclprofGetOpName(const void* opInfo, size_t opInfoLen, uint32_t index, char* opName, size_t opNameLen);
uint64_t aclprofGetOpStart(const void* opInfo, size_t opInfoLen, uint32_t index);
uint64_t aclprofGetOpEnd(const void* opInfo, size_t opInfoLen, uint32_t index);
uint64_t aclprofGetOpDuration(const void* opInfo, size_t opInfoLen, uint32_t index);
size_t aclprofGetModelId(const void* opInfo, size_t opInfoLen, uint32_t index);
aclError aclprofGetStepTimestamp(aclprofStepInfo* stepInfo, aclprofStepTag tag, aclrtStream stream);
aclprofStepInfo* aclprofCreateStepInfo(void);
void aclprofDestroyStepInfo(aclprofStepInfo* stepinfo);
void* aclprofCreateStamp(void);
void aclprofDestroyStamp(void* stamp);
aclError aclprofPush(void* stamp);
aclError aclprofPop();
aclError aclprofRangeStart(void* stamp, uint32_t* rangeId);
aclError aclprofRangeStop(uint32_t rangeId);
aclError aclprofSetStampTraceMessage(void* stamp, const char* msg, uint32_t msgLen);
aclError aclprofMark(void* stamp);
aclError aclprofMarkEx(const char* msg, size_t msgLen, aclrtStream stream);
