/**
 * Copyright (c) Huawei Technologies Co., Ltd. 2023. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef OP_API_INC_ACLNN_OPS_INFER_H_
#define OP_API_INC_ACLNN_OPS_INFER_H_

#include "aclnn_abs.h"
#include "aclnn_acos.h"
#include "aclnn_acosh.h"
#include "aclnn_adaptive_avg_pool2d.h"
#include "aclnn_adaptive_max_pool2d.h"
#include "aclnn_add.h"
#include "aclnn_addbmm.h"
#include "aclnn_addcdiv.h"
#include "aclnn_addcmul.h"
#include "aclnn_addmm.h"
#include "aclnn_addmv.h"
#include "aclnn_addr.h"
#include "aclnn_affine_grid.h"
#include "aclnn_all.h"
#include "aclnn_all_gather_matmul.h"
#include "aclnn_amax.h"
#include "aclnn_amin.h"
#include "aclnn_aminmax.h"
#include "aclnn_aminmax_all.h"
#include "aclnn_aminmax_dim.h"
#include "aclnn_any.h"
#include "aclnn_arange.h"
#include "aclnn_argmax.h"
#include "aclnn_argmin.h"
#include "aclnn_argsort.h"
#include "aclnn_asin.h"
#include "aclnn_asinh.h"
#include "aclnn_atan.h"
#include "aclnn_atan2.h"
#include "aclnn_atanh.h"
#include "aclnn_avgpool2d.h"
#include "aclnn_baddbmm.h"
#include "aclnn_batch_matmul.h"
#include "aclnn_batch_norm.h"
#include "aclnn_bincount.h"
#include "aclnn_bitwise_and_scalar.h"
#include "aclnn_bitwise_and_tensor.h"
#include "aclnn_bitwise_not.h"
#include "aclnn_bitwise_or_scalar.h"
#include "aclnn_bitwise_or_tensor.h"
#include "aclnn_bitwise_xor_scalar.h"
#include "aclnn_bitwise_xor_tensor.h"
#include "aclnn_cast.h"
#include "aclnn_ceil.h"
#include "aclnn_cat.h"
#include "aclnn_celu.h"
#include "aclnn_channel_shuffle.h"
#include "aclnn_clamp.h"
#include "aclnn_complex.h"
#include "aclnn_constant_pad_nd.h"
#include "aclnn_convolution.h"
#include "aclnn_cos.h"
#include "aclnn_cosh.h"
#include "aclnn_cummax.h"
#include "aclnn_cummin.h"
#include "aclnn_cumsum.h"
#include "aclnn_diag.h"
#include "aclnn_diag_flat.h"
#include "aclnn_div.h"
#include "aclnn_dot.h"
#include "aclnn_elu.h"
#include "aclnn_embedding.h"
#include "aclnn_embedding_renorm.h"
#include "aclnn_embedding_bag.h"
#include "aclnn_eq_scalar.h"
#include "aclnn_eq_tensor.h"
#include "aclnn_equal.h"
#include "aclnn_erf.h"
#include "aclnn_erfc.h"
#include "aclnn_erfinv.h"
#include "aclnn_exp.h"
#include "aclnn_exp2.h"
#include "aclnn_expand.h"
#include "aclnn_expm1.h"
#include "aclnn_eye.h"
#include "aclnn_ffn.h"
#include "aclnn_flash_attention_score.h"
#include "aclnn_flatten.h"
#include "aclnn_flip.h"
#include "aclnn_floor.h"
#include "aclnn_floor_divide.h"
#include "aclnn_fmod_scalar.h"
#include "aclnn_fmod_tensor.h"
#include "aclnn_frac.h"
#include "aclnn_gather.h"
#include "aclnn_gather_v2.h"
#include "aclnn_geglu.h"
#include "aclnn_gelu.h"
#include "aclnn_gemm.h"
#include "aclnn_ger.h"
#include "aclnn_ge_scalar.h"
#include "aclnn_ge_tensor.h"
#include "aclnn_glu.h"
#include "aclnn_grid_sampler2d.h"
#include "aclnn_grid_sampler3d.h"
#include "aclnn_group_norm.h"
#include "aclnn_group_norm_silu.h"
#include "aclnn_gt_scalar.h"
#include "aclnn_gt_tensor.h"
#include "aclnn_hardshrink.h"
#include "aclnn_hardsigmoid.h"
#include "aclnn_hardswish.h"
#include "aclnn_hardtanh.h"
#include "aclnn_histc.h"
#include "aclnn_im2col.h"
#include "aclnn_incre_flash_attention.h"
#include "aclnn_incre_flash_attention_v2.h"
#include "aclnn_incre_flash_attention_v3.h"
#include "aclnn_index.h"
#include "aclnn_index_add.h"
#include "aclnn_index_fill_tensor.h"
#include "aclnn_index_put_impl.h"
#include "aclnn_index_select.h"
#include "aclnn_inverse.h"
#include "aclnn_isclose.h"
#include "aclnn_isin_tensor_scalar.h"
#include "aclnn_kthvalue.h"
#include "aclnn_layer_norm.h"
#include "aclnn_leaky_relu.h"
#include "aclnn_le_scalar.h"
#include "aclnn_le_tensor.h"
#include "aclnn_linalg_vector_norm.h"
#include "aclnn_linspace.h"
#include "aclnn_log.h"
#include "aclnn_log10.h"
#include "aclnn_log1p.h"
#include "aclnn_log2.h"
#include "aclnn_logaddexp.h"
#include "aclnn_logaddexp2.h"
#include "aclnn_logdet.h"
#include "aclnn_logical_and.h"
#include "aclnn_logical_not.h"
#include "aclnn_logical_or.h"
#include "aclnn_logical_xor.h"
#include "aclnn_logsigmoid.h"
#include "aclnn_logsoftmax.h"
#include "aclnn_logsumexp.h"
#include "aclnn_lt_scalar.h"
#include "aclnn_lt_tensor.h"
#include "aclnn_masked_select.h"
#include "aclnn_matmul.h"
#include "aclnn_matmul_compress_dequant.h"
#include "aclnn_matmul_reduce_scatter.h"
#include "aclnn_max.h"
#include "aclnn_max_dim.h"
#include "aclnn_maximum.h"
#include "aclnn_max_pool2d_with_indices.h"
#include "aclnn_max_unpool2d.h"
#include "aclnn_max_unpool3d.h"
#include "aclnn_max_v2.h"
#include "aclnn_mean.h"
#include "aclnn_median.h"
#include "aclnn_min.h"
#include "aclnn_min_dim.h"
#include "aclnn_minimum.h"
#include "aclnn_mish.h"
#include "aclnn_mm.h"
#include "aclnn_mul.h"
#include "aclnn_mv.h"
#include "aclnn_ne_scalar.h"
#include "aclnn_ne_tensor.h"
#include "aclnn_neg.h"
#include "aclnn_nonzero.h"
#include "aclnn_nonzero_v2.h"
#include "aclnn_norm.h"
#include "aclnn_one_hot.h"
#include "aclnn_pdist.h"
#include "aclnn_pdist_forward.h"
#include "aclnn_permute.h"
#include "aclnn_pow_tensor_tensor.h"
#include "aclnn_prelu.h"
#include "aclnn_prod.h"
#include "aclnn_prompt_flash_attention.h"
#include "aclnn_quant_matmul.h"
#include "aclnn_range.h"
#include "aclnn_real.h"
#include "aclnn_reciprocal.h"
#include "aclnn_reduce_sum.h"
#include "aclnn_reflection_pad1d.h"
#include "aclnn_reflection_pad2d.h"
#include "aclnn_reflection_pad3d.h"
#include "aclnn_relu.h"
#include "aclnn_renorm.h"
#include "aclnn_repeat.h"
#include "aclnn_repeat_interleave.h"
#include "aclnn_replication_pad1d.h"
#include "aclnn_replication_pad2d.h"
#include "aclnn_replication_pad3d.h"
#include "aclnn_roll.h"
#include "aclnn_round.h"
#include "aclnn_rrelu_with_noise.h"
#include "aclnn_rsqrt.h"
#include "aclnn_rsub.h"
#include "aclnn_scatter.h"
#include "aclnn_scatter_add.h"
#include "aclnn_searchsorted.h"
#include "aclnn_selu.h"
#include "aclnn_sigmoid.h"
#include "aclnn_sign.h"
#include "aclnn_signbit.h"
#include "aclnn_silu.h"
#include "aclnn_sin.h"
#include "aclnn_sinc.h"
#include "aclnn_sinh.h"
#include "aclnn_slice.h"
#include "aclnn_slice_v2.h"
#include "aclnn_slogdet.h"
#include "aclnn_softmax.h"
#include "aclnn_softplus.h"
#include "aclnn_softshrink.h"
#include "aclnn_sort.h"
#include "aclnn_split_tensor.h"
#include "aclnn_split_with_size.h"
#include "aclnn_sqrt.h"
#include "aclnn_stack.h"
#include "aclnn_std.h"
#include "aclnn_std_mean_correction.h"
#include "aclnn_sub.h"
#include "aclnn_sum.h"
#include "aclnn_s_where.h"
#include "aclnn_take.h"
#include "aclnn_tan.h"
#include "aclnn_tanh.h"
#include "aclnn_threshold.h"
#include "aclnn_topk.h"
#include "aclnn_trace.h"
#include "aclnn_trans_quant_param.h"
#include "aclnn_triangular_solve.h"
#include "aclnn_tril.h"
#include "aclnn_triu.h"
#include "aclnn_trunc.h"
#include "aclnn_unique.h"
#include "aclnn_unique2.h"
#include "aclnn_unique_consecutive.h"
#include "aclnn_upsample_bilinear_2d.h"
#include "aclnn_upsample_linear_1d.h"
#include "aclnn_upsample_nearest_1d.h"
#include "aclnn_upsample_nearest_2d.h"
#include "aclnn_upsample_nearest_3d.h"
#include "aclnn_upsample_trilinear_3d.h"
#include "aclnn_var.h"
#include "aclnn_var_mean.h"
#include "aclnn_x_log_y_scalar_other.h"
#include "aclnn_x_log_y_scalar_self.h"
#include "aclnn_x_log_y_tensor.h"
#include "aclnn_digamma.h"
#include "aclnn_lgamma.h"
#include "aclnn_global_average_pool.h"
// #include "aclnn_bitwiseand.h"
#include "aclnn_copy.h"
#include "aclnn_fill_diagonal.h"
#include "aclnn_fill_scalar.h"
#include "aclnn_fill_tensor.h"
#include "aclnn_index_copy.h"
#include "aclnn_lerp_tensor.h"
#include "aclnn_lerp_scalar.h"
#include "aclnn_masked_fill_scalar.h"
#include "aclnn_masked_fill_tensor.h"
#include "aclnn_masked_scatter.h"
#include "aclnn_nan_to_num.h"
#include "aclnn_ones.h"
#include "aclnn_pow.h"
#include "aclnn_put.h"
#include "aclnn_remainder.h"
#include "aclnn_scatter_update.h"
#include "aclnn_zero.h"
#include "aclnn_isin.h"
#include "aclnn_instance_norm.h"
// #include "aclnn_foreach_add_scalar_v2.h"
// #include "aclnn_foreach_addcdiv_scalar_v2.h"
// #include "aclnn_foreach_addcmul_scalar_v2.h"
// #include "aclnn_foreach_add_list_v2.h"
// #include "aclnn_foreach_div_scalar_v2.h"
// #include "aclnn_foreach_maximum_scalar_v2.h"
// #include "aclnn_foreach_minimum_scalar_v2.h"
// #include "aclnn_foreach_mul_scalar_v2.h"
// #include "aclnn_foreach_pow_scalar_v2.h"
// #include "aclnn_foreach_round_off_number_v2.h"
// #include "aclnn_foreach_sub_list_v2.h"
// #include "aclnn_foreach_sub_scalar_v2.h"
#endif // OP_API_INC_ACLNN_OPS_INFER_H_